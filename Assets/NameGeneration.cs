using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class NameGeneration
{
    readonly List<string> firstNames = new List<string>()
    {
        "daves",
        "jims",
        "matthaniel",
        "mattherine",
        "mikolas",
        "miketoria",
        "micqueline",
        "nichael",
        "mick",
        "nicktoria",
        "benathan",
        "benovan",
        "bennifer",
        "bencesca",
        "benelope",
        "bendolyn",
        "jonjamin",
        "jonovan",
        "jonnifer",
        "joncesca",
        "jonelope",
        "jondelyn",
        "natrick",
        "natricia",
        "tedward",
        "tedeline",
        "teddison",
        "jimothy",
        "jimantha",
        "jimberly",
        "jimelia",
        "tames",
        "timantha",
        "timily",
        "timberly",
        "timelia",
        "drewis",
        "drewseph",
        "drewanna",
        "calphonse",
        "calfred",
        "calizabeth",
        "donothan",
        "donjamin",
        "donnifer",
        "doncesca",
        "dondelyn",
        "bobert",
        "elizabob",
        "robigail",
        "bobigail",
        "billiam",
        "wilvan",
        "bilvan",
        "bilfred",
        "isabilla",
        "williana",
        "billianna",
        "billian",
        "willian",
        "edrew",
        "halizabeth",
        "hallian",
        "megory",
        "maxander",
        "maxanne",
        "theoseph",
        "alexwell",
        "alexanne",
        "terryanne",
        "lewseph",
        "sams",
        "samothy",
        "samberly",
        "patthew",
        "natthew",
        "pathaniel",
        "patherine",
        "theodave",
        "andward",
        "anddison",
        "vichael",
        "vicholas",
        "vicksander",
        "vicqueline",
        "katthew",
        "kathaniel",
        "katrick",
        "jenjamin",
        "jenathan",
        "jenovan",
        "jencesca",
        "jenelope",
        "jendolyn",
        "betthew",
        "bethaniel",
        "betherine",
        "belvin",
        "belliope",
        "billiope",
        "bellip",
        "belliam",
        "bellen",
        "belianna",
        "philvin",
        "philliam",
        "philphonse",
        "philfred",
        "philliope",
        "philizabeth",
        "philiet",
        "philianna",
        "phillian",
        "benverly",
        "liverly",
        "jachael",
        "jacholas",
        "jactoria",
        "madward",
        "madrew",
        "madrea",
        "abert",
        "adward",
        "adgar",
        "adrew",
        "tedgar",
        "emothy",
        "emms",
        "emantha",
        "emuel",
        "emberly",
        "ellip",
        "elliope",
        "elliam",
        "ellian",
        "elphonse",
        "elfred",
        "calliot",
        "halliot",
        "philliot",
        "harrence",
        "heresa",
        "terold",
        "terriet",
        "hargaret",
        "marold",
        "marriet",
        "norrance",
        "noresa",
        "norald",
        "norriet",
        "harothy",
        "norothy",
        "norgaret",
        "dorence",
        "doresa",
        "dorriet",
        "dorald",
        "vicnoria",
        "vicdoria",
        "benold",
        "ronjamin",
        "jonald",
        "ronathan",
        "ronovan",
        "anold",
        "rondrew",
        "ronnalise",
        "jenold",
        "ronnifer",
        "franold",
        "roncesca",
        "penold",
        "ronelope",
        "gwenold",
        "rondelyn",
        "annjamin",
        "bennalise",
        "annathan",
        "jonnalise",
        "anovan",
        "donnalise",
        "annifer",
        "jennalise",
        "ancesca",
        "frannalise",
        "anelope",
        "pennalise",
        "gwennalise",
        "andolyn",
        "marrence",
        "meresa",
        "morothy",
        "kimothy",
        "kames",
        "kimantha",
        "kimelia",
        "franjamin",
        "franathan",
        "franovan",
        "frandrew",
        "frandrea",
        "frannifer",
        "franelope",
        "frandolyn",
        "julvin",
        "julliope",
        "julliam",
        "julfred",
        "julphonse",
        "jullip",
        "julizabeth",
        "callip",
        "willip",
        "billip",
        "allip",
        "hallip",
        "jillip",
        "amithy",
        "amuel",
        "torianna",
        "jilvin",
        "jilliam",
        "jilphonse",
        "jilfred",
        "jilizabeth",
        "jilianna",
        "jiliet",
        "penjamin",
        "penathan",
        "penovan",
        "pendrew",
        "pendrea",
        "pennifer",
        "pencesca",
        "pendolyn",
        "roxwell",
        "roxine",
        "roxander",
        "roxelyn",
        "roxeph",
        "gwenjamin",
        "gwenathan",
        "gwenovan",
        "gwendrew",
        "gwendrea",
        "gwennifer",
        "gwencesca",
        "gwenelope",
        "human"
    };

    readonly List<List<string>> lastNames = new List<List<string>>()
    {
        new List<string> {"mc", "prefix"},
        new List<string> {"xac", "prefix"},
        new List<string> {"fitz", "prefix"},
        new List<string> {"kil", "prefix"},
        new List<string> {"gil", "prefix"},
        new List<string> {"o'", "prefix"},
        new List<string> {"son", "suffix"},
        new List<string> {"sen", "suffix"},
        new List<string> {"man", "suffix"},
        new List<string> {"s", "suffix"},
        new List<string> {"z", "suffix"},
        new List<string> {"berg", "suffix"},
        new List<string> {"cox", "suffix"},
        new List<string> {"dotter", "suffix"},
        new List<string> {"anka", "suffix"},
        new List<string> {"ovich", "suffix"},
        new List<string> {"ski", "suffix"},
        new List<string> {"stein", "suffix"},
        new List<string> {"ovitz", "suffix"},
    };

    private static System.Random rnd = new System.Random();

    public string GenerateFirstName()
    {
        return GetRandomElementFromNamesList(firstNames);
    }

    public string GenerateLastName()
    {
        var name = GetRandomElementFromNamesList(firstNames);
        var r = rnd.Next(lastNames.Count);
        var lname = lastNames[r];
        string lastName;
        if (lname[1] == "prefix")
        {
            lastName = lname[0] + name;
        }
        else
        {
            lastName = name + lname[0];
        }

        return lastName;

    }

    private static string GetRandomElementFromNamesList(IList<string> names)
    {
        var r = rnd.Next(names.Count);
        return names[r];
    }
}